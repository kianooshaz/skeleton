// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/google/wire"
)

// Injectors from web_wire.go:

// NewWebContainer creates a new web dependency injection container.
func NewWebContainer() (*WebContainer, error) {
	appConfig, err := ProvideAppConfig()
	if err != nil {
		return nil, err
	}
	db, err := ProvideDatabase(appConfig)
	if err != nil {
		return nil, err
	}
	logger := ProvideLogger(appConfig)
	baseContainer := ProvideBaseContainer(appConfig, db, logger)
	webService, err := ProvideRestServer(appConfig, logger)
	if err != nil {
		return nil, err
	}
	userService := ProvideUserService(appConfig, db, logger)
	organizationService := ProvideOrgService(appConfig, db, logger)
	usernameService := ProvideUsernameService(appConfig, db, logger)
	auditService := ProvideAuditService(appConfig, db, logger)
	passwordService := ProvidePasswordService(appConfig, db, logger)
	webContainer := &WebContainer{
		BaseContainer:   baseContainer,
		RestServer:      webService,
		UserService:     userService,
		OrgService:      organizationService,
		UsernameService: usernameService,
		AuditService:    auditService,
		PasswordService: passwordService,
	}
	return webContainer, nil
}

// web_wire.go:

// WebProviderSet contains providers for web container dependencies.
var WebProviderSet = wire.NewSet(
	BaseProviderSet,
	ProvideRestServer,
	ProvideUserService,
	ProvideOrgService,
	ProvideUsernameService,
	ProvideAuditService,
	ProvidePasswordService,
)
